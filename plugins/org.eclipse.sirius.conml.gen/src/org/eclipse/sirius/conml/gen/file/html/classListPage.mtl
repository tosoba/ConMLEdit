[module classListPage('http://conml.ecore')/]

[import org::eclipse::sirius::conml::gen::fragment::classListItem/]
[import org::eclipse::sirius::conml::gen::fragment::sideNavSection/]

[template public classListPage(aDomain : Domain, projectName : String)]
[file ('html/ClassList.html', false, 'UTF-8')]
<!DOCTYPE html>
<html>

<head>
    <title>[projectName/] class list</title>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <script src="../js/jquery-3.4.1.min.js"></script>
	<script src="../js/classList.js"></script>
    <link href="../css/styles.css" rel="Stylesheet" type="text/css" />
</head>

<body>
    <div class="PageContent">
        <table style="width: 100%;" class="MainSection">
            <tr>
                <td class="EmptySubSection">&nbsp;</td>

                <td class="TitleSubSection">
                    <h1>[projectName/] class list</h1>
                </td>
            </tr>

            <tr>
                [sideNavSection('./')/]
                
				<td class="ContentSubSection">
                    <p>
                        <h2>This is a list of classes in [projectName/], alphabetically sorted.</h2>
                    </p>

                    <p>
                        Show:
                        <select onchange="onSelectShowClassesChange(this)">
                            <option selected="selected" value="All">All</option>
                            <option value="OnlyConcrete">Only concrete</option>
                        </select>

                        &nbsp;&nbsp;						
					[for (firstLetter : String | aDomain.eAllContents(Class)->select(aClass : Class | aClass.name <> null and aClass.name.size() > 0)->collect(aClass : Class | aClass.name.at(1).toUpperCase())->asSet()->sortedBy(name: String | name))]
						<a class="EmbeddedLink ClassLetterLink" href="#[firstLetter/]">[firstLetter/]</a>	
					[/for]
                    </p>

					[let classes : OrderedSet(Class) = aDomain.eAllContents(Class)->select(aClass : Class | aClass.name <> null and aClass.name.size() > 0)->asSet()->sortedBy(aClass: Class | aClass.name.toLowerCase())]
					[if (classes->size() > 0)]
                    <table class="FeaturesRowHeader">
                        <thead>
                            <tr>
                                <td style="width:350px;">
                                    Name
                                </td>
                                <td>
                                    Definition
                                </td>
                            </tr>
                        </thead>

                        <tbody>
						[for (index : Integer | Sequence{1..classes->size()})]
							[classListItem(classes->at(index), index)/]
						[/for]
						</tbody>
                    </table>
					[else]
						[projectName/] has no classes.
					[/if]
					[/let]
                </td>
            </tr>
        </table>
    </div>
</body>

</html>
[/file]
[/template]