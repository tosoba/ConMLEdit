/**
 *
 * $Id$
 */
package conml.types.validation;

import conml.instances.InstanceModel;

import conml.types.TypeModel;
import conml.types.TypeModelElement;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link conml.types.TypeModel}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface TypeModelValidator {
	boolean validate();

	boolean validateHasElements(EList<TypeModelElement> value);
	boolean validateConformedBy(InstanceModel value);
	boolean validateHasTemporalAspectOf(conml.types.Class value);
	boolean validateHasSubjectiveAspectOf(conml.types.Class value);
	boolean validateExtends(TypeModel value);
	boolean validateIsBaseOf(EList<TypeModel> value);
	boolean validateIsParticularIn(TypeModel value);
	boolean validateHasParticular(EList<TypeModel> value);
}
